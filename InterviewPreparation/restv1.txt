Restful webservices

1 <web-app version="3.0" xmlns="http://java.sun.com/xml/ns/javaee"
2 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
3 xsi:schemaLocation="http://java.sun.com/xml/ns/javaee
4 http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd">
5 <servlet>
6 <servlet-name>javax.ws.rs.core.Application</servlet-name>
7 </servlet>
8 <servlet-mapping>
9 <servlet-name>javax.ws.rs.core.Application</servlet-name>
10 <url-pattern>/myresources/*</url-pattern>
11 </servlet-mapping>
12 </web-app>

Root resource classes are instantiated by the JAX-RS runtime and MUST have a public constructor for which
the JAX-RS runtime can provide all parameter values. Note that a zero argument constructor is permissible
under this rule.
A public constructor MAY include parameters annotated with one of the following: @Context, @Header-
Param, @CookieParam, @MatrixParam, @QueryParam or @PathParam. However, depending on the
resource class lifecycle and concurrency, per-request information may not make sense in a constructor. If
more than one public constructor is suitable then an implementation MUST use the one with the most
parameters. Choosing amongst suitable constructors with the same number of parameters is implementation
specific, implementations SHOULD generate a warning about such ambiguity.
Non-root resource classes are instantiated by an application and do not require the above-described public
constructor.

@MatrixParam Extracts the value of a URI matrix parameter.
@QueryParam Extracts the value of a URI query parameter.
@PathParam Extracts the value of a URI template parameter.
@CookieParam Extracts the value of a cookie.
@HeaderParam Extracts the value of a header.
@Context Injects an instance of a supported resource, see chapters 9 and 10 for more details

Application classes can declare the supported request and response media types using the @Consumes and
@Produces annotations respectively.

 If your pages are mostly being generated server-side, you will use MVC. If your pages are being generated mostly on the client, using Javascript (as in a SPA application), you will use MVVM.
